list of bonuses

# list of lists for the board 
# the bonus list for the cells which have bonuses
# the token list


1 The game board
Scrabble is played on a 15x15 square board. The game board is represented by lists of lists (a list of
cells for each line of the tray):


 A bonus list (list of string lists) contains the bonuses of the cells, as shown in picture 1.
The value "MT" (red cells) indicates a "triple word count", the value "MD" (orange cells, including the cell
central) a word counts double (a word passing through this box counts as double or triple, respectively, a word passing through this box counts as double or triple, respectively, a word passing through this box counts as double or triple, respectively.
of its value); the value "LT" (dark blue boxes) a triple counting letter, the value "LD" (light blue boxes) a letter
double account (the letter on this box counts for 2 or 3 times its value respectively). Cells without
bonuses (green boxes) contain an empty string.


 Another token list (list of character lists) that shows the positions of the letter tokens already played on this game.
tray. Each cell contains the character of the token placed on that square, or an empty string if the square is empty.
Figure 1: Scrabble board with bonus cells



1. Write an init bonus() function that initializes and returns a list of lists of characters, containing the bonuses of the
boxes of the tray as shown in the image. We can use the provided Python crap that gives the lists of the
cells for each bonus. Cells with no bonuses must contain an empty string.
1
2. Write an init tokens() function that initializes and returns a list of lists containing only empty boxes
(empty string in each cell). Attention each line must be an independent list !
3. 3. Write a function to display tokens(j) that receives the token positions and buys the correct board.
sponding. For the moment we won't buy the bonuses, but a space for the boxes without chips. We will use
characters to separate rows and columns at the end of the purchase.
4. Improve this shopping function to also check out bonuses, using symbols to make them visible.
even on squares containing a token. For example, check 'A' for a box without bonus containing the letter 'A',
or check 'A*' for a bonus box; you can choose a different symbol for each of the 4 possible bonuses.
5. Bonus if the rest is text-based: other function for graphic purchase (library of your choice).
with colors for the bonus boxes. Remember that the game must ALSO work with the text interface.
6. Write a main program that generates and buys the board.
